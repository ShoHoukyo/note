"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkdocusaurus"] = globalThis["webpackChunkdocusaurus"] || []).push([["content---note-docs-my-public-software-cloud-azure-service-894-afe"],{

/***/ "./docs/my/public/software/cloud/Azure/service.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assets: () => (/* binding */ assets),\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   metadata: () => (/* reexport default export from named module */ _site_docusaurus_docusaurus_plugin_content_docs_default_site_docs_my_public_software_cloud_azure_service_md_894_json__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _site_docusaurus_docusaurus_plugin_content_docs_default_site_docs_my_public_software_cloud_azure_service_md_894_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.docusaurus/docusaurus-plugin-content-docs/default/site-docs-my-public-software-cloud-azure-service-md-894.json\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\nconst assets = {\n\n};\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    pre: \"pre\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n      children: \"---\\nname: Azure App Service\\noverview: HTTP-based service for hosting web applications, REST APIs, and mobile back ends\\nfeatures:\\n  - \\\"Scale out/in (machines, by autoscaling)\\\"\\n  - \\\"Scale up/down (CPU, RAM)\\\"\\n  - \\\"CI/CD and manual deploy\\\"\\n  - \\\"Deployment slot (swap STG PROD)\\\"\\n  - \\\"various language (Python, etc) runtime\\\"\\n  - \\\"out-of-the-box authentication (of end-user) with federated identity providers like facebook\\\"\\nlimits:\\n  - \\\"built-in image higher latency read storage\\\"\\nreferences:\\n  - \\\"https://learn.microsoft.com/en-us/training/modules/introduction-to-azure-app-service/2-azure-app-service\\\"\\n  - \\\"https://learn.microsoft.com/en-us/training/modules/introduction-to-azure-app-service/3-azure-app-service-plans\\\"\\n  - \\\"https://learn.microsoft.com/en-us/training/modules/introduction-to-azure-app-service/6-network-features\\\"\\nServicePlan:\\n  overview: \\\"an app always runs in an App Service plan\\\"\\n  defines:\\n    - \\\"OS\\\"\\n    - \\\"Region\\\"\\n    - \\\"Number, size of VM\\\"\\n    - \\\"Pricing tier\\\"\\n  use:\\n    - \\\"save money by putting apps in same App Service plan\\\"\\n    - \\\"scale independently by using separate App Service plan\\\"\\n  deploymentSlot:\\n    use:\\n      - \\\"stg, prod swap\\\"\\n      - \\\"percentage testing: random assign client sessions\\\"\\n  autoscaling:\\n    DenialOfService:\\n      overview: \\\"better filter before reaching service (autoscaling would be expensive)\\\"\\n    use:\\n      - \\\"overhead monitoring resources and trigger scaling event, in long-term better manually scale system\\\"\\n      - \\\"https://learn.microsoft.com/en-us/training/modules/scale-apps-app-service/3-app-service-autoscale-conditions-rules\\\"\\nnetwork:\\n  overview: \\\"by default, only internet\\\"\\ndeploy:\\n  command: \\\"az webapp up\\\"\\n  exampleResult: {\\\"URL\\\": \\\"http://az204app10680.azurewebsites.net\\\", \\\"appserviceplan\\\": \\\"asp_3\\\", \\\"location\\\": \\\"eastus\\\", \\\"name\\\": \\\"az204app10680\\\", \\\"os\\\": \\\"Windows\\\", \\\"resourcegroup\\\": \\\"rg\\\"}\\n  \\nwebapp:\\n  config:\\n    overview: \\\"app settings passed as environment variables (encrypted-at-rest)\\\"\\n    ConnectionString:\\n      overview: \\\"similar to app-setting\\\"\\n    GeneralSetting:\\n      - \\\"StackSetting (think Docker Image)\\\"\\n      - \\\"PlatformSetting\\\"\\n      - debugging\\n      - clientCert\\n    pathMapping:\\n      overview: \\\"think Docker Container volume\\\"\\n    logging:\\n      overview: \\\"app, deployment logging\\\"\\n      references:\\n        - \\\"https://learn.microsoft.com/en-us/training/modules/configure-web-app-settings/5-enable-diagnostic-logging\\\"\\n\\n---\\n\\n\\n---\\nname: Azure Functions\\noverview: |\\n  serverless\\n  Azure Functions offers more developer productivity than Azure App Service WebJobs. \\n  Offers more options for programming languages, dev-env, Azure service integration, and pricing. \\n  For most scenarios, it's the best choice.\\nfeatures:\\n  - \\\"Runs in Azure, or locally\\\"\\nlimits:\\n  - \\\"\\\"\\nuse:\\nconfig:\\n  overview: \\\"use env-var\\\"\\n  trigger: \\\"1 to 1 function\\\"\\n  binding:\\n    overview: optional, supports (e.g. additional output to a queue) \\n    no equivalent in AWS Lambda?\\nfunctionApp:\\n  overview: |\\n    execution context, unit of deployment and management for multiple functions\\nreferences:\\n  - \\\"https://learn.microsoft.com/en-us/training/modules/explore-azure-functions/2-azure-functions-overview\\\"\\nhostPlan:\\n  - name: Consumption\\n    tags:\\n      - \\\"basic\\\"\\n    timeoutMinutes:\\n      default: 5\\n      max: 10\\n    desc: |\\n      default\\n  - name: Premium \\n    tags:\\n      - \\\"basic\\\"\\n    desc: |\\n      pre-warm, virtual networks\\n  - name: Dedicated \\n    tags:\\n      - \\\"basic\\\"\\nDurable:\\n  overview: |\\n    extension of Azure Functions \\n    perform long-lasting, stateful operations, orchestrate a long-running workflow\\n    serverless hosting model + (managed) state, activity monitoring, synchronization, and runtime concerns\\n    no queue is needed, state is managed\\n  use:\\n    - functions in a graph\\n    - fan-out/fan-in\\n    - example |\\n      Human interaction, a simplified version: https://learn.microsoft.com/en-us/training/modules/create-long-running-serverless-workflow-with-durable-functions/3-design-a-workflow-based-on-durable-functions\\n      2024-05-24 sandbox didn't work due to temporary cloud issue\\n  types:\\n    - Client entry point handling event\\n    - Orchestrator  (C# or JavaScript)\\n    - Activity functions \\n  orchestrationFunction:\\n    features:\\n      - workflows in code\\n      - Output from called functions saved locally (what local?)\\n      - when function awaits checkpoints progress automatically  (for saving CPU only?)\\n  references:\\n    - comparison with Azure Logic Apps https://learn.microsoft.com/en-us/training/modules/create-long-running-serverless-workflow-with-durable-functions/2-what-is-durable-functions\\n---\\n\\n\\n---\\nname: Azure Blob\\noverview: massive amounts of unstructured data\\nuse:\\n  - \\\"Writing to log file\\\"\\naccessTier:\\n  overview: \\\"blob switch between access tiers any time\\\"\\n  list:\\n    - hot\\n    - cool\\n    - cold\\n    - archive (offline, no r/w)\\n  archiveRehydrate:\\n    - copy to hot/cool with new name\\n    - rehydrate\\nlifecycle:\\n  overview: policy in .json\\n  features:\\n    - Transition blobs tier\\n    - Delete \\n    - rules to run once per day at storage account level\\n    - rules to containers or a subset of blobs (using prefixes as filters)\\n\\nresources:\\n  - Storage account (like AWS bucket) need to be unique among all Azure users?\\n  - container  (dir name)\\n  - blob:\\n    - block\\n    - append\\n    - page (supports random access, used to store virtual hard drive (VHD))\\n  - metadata:\\n    overview: Containers and blobs support custom metadata, represented as HTTP headers.\\nsecurity:\\n  - auto-encrypted  Storage Service Encryption (SSE)\\n  - options:\\n    - Azure Disk Encryption\\n    - keys  https://learn.microsoft.com/en-us/training/modules/explore-azure-blob-storage/4-blob-storage-security\\nfeatures:\\n  - \\\"static limited website separate from $web (container)\\\"\\nlimits:\\n  - \\\"\\\"\\nreferences:\\n  - \\\"\\\"\\n---\\n\\n\\n---\\nname: Azure Cosmos DB\\noverview: | \\n  fully managed NoSQL, multi-master\\n  and relational? (web ui says so)\\n  API for NoSQL (document model) is native, others just mimic\\n  API for Table stores data in key/value (!bad name)\\nAPI:\\n  - name: API for PostgreSQL\\n    desc: |\\n      Azure Cosmos DB for PostgreSQL is a managed service for running PostgreSQL at any scale\\n      p1 how?  RDB?   solves scale problem?\\nfeatures:\\n  - \\\"less than 10 milliseconds at the 99th percentile\\\"\\n  - \\\"no relational DB, but only column-family?\\\"\\n  - \\\"stored procedures, triggers, and user-defined functions (UDFs) in JavaScript\\\"\\nchangeFeed:\\n  overview: insert, update but not delete now\\ncost:\\n  - provisioned throughput, consumed storage on hourly basis\\n  - operation  request unit (RU)\\nhierarchy: \\n  - DB account\\n  - DB (like namespace)\\n  - (partitioned) container (with items: row, document, etc)\\nconsistency:\\n  - Strong\\n  - Bounded staleness\\n  - Session\\n  - Consistent prefix\\n  - Eventual\\n\\nlimits:\\n  - \\\"\\\"\\nsecurity:\\n  - \\nreferences:\\n  - \\\"\\\"\\n---\\n\\n---\\nname: Azure Container Registry\\noverview: managed, private Docker registry\\nfeatures:\\n  - Container Registry Tasks to build container images\\nlimits:\\n  - \\ncost:\\n  - \\nresources:\\n  - \\nsecurity:\\n  - \\nreferences:\\n  - https://learn.microsoft.com/en-us/azure/container-registry/\\n---\\n\\n\\n---\\nname: Azure Container Instances\\noverview: fastest and simplest way to run a container\\nfeatures:\\n  - \\\"public internet\\\"\\nlimits:\\n  - \\\"\\\"\\ncost:\\n  - cpu seconds\\nresources:\\n  - container group (same host machine and DNS name, like pod in Kubernetes)\\nsecurity:\\n  - \\nreferences:\\n  - \\\"\\\"\\n---\\n\\n---\\nname: Azure Container Apps\\noverview: |\\n  microservices and containerized apps on a serverless platform that runs on top of Azure Kubernetes Service\\n  \\nfeatures:\\n  - \\\"auto scaling\\\"\\n  - \\\"Blue/Green deployments, A/B testing scenario\\\"\\n  - built-in authentication and authorization like facebook\\nlimits:\\n  - \\\"linux/amd64  only\\\"\\n  - no privileged container\\ncost:\\n  - \\nresources:\\n  - Container Apps environment, as secure boundary around groups of container apps\\n  - App (share hard disk and network resources) with secrets\\n  - containers\\nsecurity:\\n  - \\nreferences:\\n  - \\\"\\\"\\n---\\n\\n---\\nname: Azure Microsoft identity platform\\noverview: |\\n  sign in using Microsoft identities or social account\\n  supports OAuth 2.0\\nfeatures:\\n  - \\\"\\\"\\nlimits:\\n  - \\\"\\\"\\ncost:\\n  - \\nresources:\\n  - |\\n    The application object is the global representation of your application for use across all tenants, and the service principal is the local representation for use in a specific tenant.\\nsecurity:\\n  - permissions:\\n    - delegated:\\n      overview: act as a signed-in user\\n    - appOnly:\\n      overview: run without a signed-in user present\\nclientApp:\\n  overview: \\n    acquire security tokens\\n  types:\\n    Public: |\\n      run on devices or desktop computers or in a web browser. not trusted to safely keep application secrets\\n    Confidential: |\\n      run on servers (web apps, web API apps, or even service/daemon apps). considered difficult to access, therefore capable of keeping an application secret (incl. client ID, client secret)\\n\\nreferences:\\n  - \\\"\\\"\\n---\\n\\n---\\nname: Azure storage\\noverview: \\nfeatures:\\n  - \\\"\\\"\\nlimits:\\n  - \\\"\\\"\\ncost:\\n  - \\nresources:\\n  - a\\nsecurity:\\n  - shared access signatures (SAS)  (like AWS presigned url)\\n  - storedAccess:\\n    overview: |\\n      A stored access policy: an extra level of control over service-level shared access signatures (SAS) on the server side. \\n      change the start time, expiry time, or permissions for a signature, or to revoke it after it is issued.\\nreferences:\\n  - \\\"\\\"\\n---\\n\\n---\\nname: Azure Microsoft Graph \\noverview: |\\n  gateway to data (Microsoft 365, Windows 10, and Enterprise Mobility + Security), intelligence in Microsoft 365. \\n  (reads like data collection of consumer data)\\n  RESTful web API \\nfeatures:\\n  - \\\"\\\"\\nlimits:\\n  - \\\"\\\"\\ncost:\\n  - \\nresources:\\n  - a\\nsecurity:\\n  - \\nreferences:\\n  - \\\"\\\"\\n---\\n\\n---\\nname: Azure Key Vault\\noverview: vaults and managed hardware security module(HSM) pools\\nfeatures:\\n  - \\\"\\\"\\nlimits:\\n  - \\\"\\\"\\ncost:\\n  - \\nresources:\\n  - \\nsecurity:\\n  - \\nreferences:\\n  - \\\"\\\"\\n---\\n\\n\\n---\\nname: Azure managed identities\\noverview: |\\n  secure communication between different components\\n  Internally, managed identities are service principals of a special type, which are locked to only be used with Azure resources.\\ntypes:\\n  - system-assigned   automatic\\n  - user-assigned\\nfeatures:\\n  - \\\"\\\"\\nlimits:\\n  - \\\"\\\"\\ncost:\\n  - \\nresources:\\n  - a\\nsecurity:\\n  - \\nreferences:\\n  - \\\"\\\"\\n---\\n\\n\\n---\\nname: Azure App Configuration \\noverview: |\\n  centrally manage and secure configuration (but not secret), manage app features (flag)\\n  complements Azure Key Vault (secret)\\n  configuration data as key-value(string) pairs (key separator such as / or : not interpreted)\\n  (why use it? simply use custom app file or env-var)\\nfeatures:\\n  - \\\"\\\"\\nlimits:\\n  - \\\"\\\"\\ncost:\\n  - \\nsecurity:\\n  - \\nreferences:\\n  - \\\"\\\"\\n---\\n\\n---\\nname: Azure API Management\\noverview: |\\n  publish, rate limit\\n  developer engagement, business insights, analytics, security, and protection\\nfeatures:\\n  - \\\"\\\"\\nlimits:\\n  - Policy: XML with C# inside (bad tech. choice)\\ncost:\\n  - \\nresources:\\n  - a\\nsecurity:\\n  - \\nreferences:\\n  - \\\"\\\"\\n---\\n\\n---\\nname: Azure Event Grid\\noverview: |\\n  event broker, custom topic\\n  deliver each event at least once for each matching subscription immediately with retry\\n  (generally not queue)\\nfeatures:\\n  - \\\"multicast\\\"\\n  - CloudEvents format  (great to rely less on Azure)\\nlimits:\\n  - no guarantee order for event delivery\\nonDeliveryError:\\n  - retry \\n  - dead-letter \\n  - drop \\ncost:\\n  - \\nresources:\\n  - \\nsecurity:\\n  - \\nreferences:\\n  - \\\"\\\"\\n---\\n\\n---\\nname: Azure Event Hubs\\noverview: |\\n  receive and process millions of events per second\\n  time-retention durable buffer \\nfeatures:\\n  - PaaS Kafka\\n  - Capture\\nlimits:\\n  - \\ncost:\\n  - \\nresources:\\n  - \\nsecurity:\\n  - \\nreferences:\\n  - \\\"https://learn.microsoft.com/en-us/training/modules/azure-event-hubs/2-event-hubs-overview\\\"\\n---\\n\\n---\\nname: Azure Service Bus queue\\noverview: |\\n  queue, pub-sub(1:n), message broker\\n  \\nfeatures:\\n  - (FIFO) guarantee in \\\"session\\\"\\n  - pub-sub (subscription is like virtual queue, durable?)\\nlimits:\\n  - \\ncost:\\n  - \\nresources:\\n  - \\nsecurity:\\n  - \\nreferences:\\n  - \\\"https://learn.microsoft.com/en-us/training/modules/discover-azure-message-queue/2-choose-queue-solution\\\"\\n---\\n\\n---\\nname: Azure Storage queue\\noverview: |\\n  simpler queue (more on storage)\\n  \\nfeatures:\\n  - message time-to-live\\n  - update message\\nlimits:\\n  - \\ncost:\\n  - \\nresources:\\n  - \\nsecurity:\\n  - \\nreferences:\\n  - \\\"\\\"\\n---\\n\\n---\\nname: Azure Application Insights\\noverview: |\\n  comprehensive monitoring incl. Application Map, alert\\nfeatures:\\n  - website up monitoring\\n  - log, tracing\\n  - auto instrumentation\\nlimits:\\n  - \\ncost:\\n  - \\nresources:\\n  - \\nsecurity:\\n  - \\nreferences:\\n  - \\\"\\\"\\n---\\n\\n\\n---\\nname: Azure CDN\\noverview: |\\n  CDN\\nfeatures:\\n  - accelerate dynamic content (optimize network)\\nlimits:\\n  - \\ncost:\\n  - \\nresources:\\n  - \\nsecurity:\\n  - \\nreferences:\\n  - \\\"\\\"\\n---\\n\\n\\n---\\nname: Azure Resource Manager\\noverview: |\\n  When a user sends a request from any of the Azure tools, APIs, or SDKs, ARM receives the request. ARM authenticates and authorizes the request. Then, ARM sends the request to the Azure service, which takes the requested action.\\n  as of 2024-05-21, Azure recommends Bicep over ARM\\nfeatures:\\n  - resiliency and continuous availability (in control plane)\\n  - ARM  (like AWS cloudformation) real JSON\\n  - Bicep  (DSL unlike AWS CDK, simple, compiles to ARM and JSON)\\n  - https://aka.ms/bicepdemo\\nlimits:\\n  - bicep to arm conversion tool?\\n  - which is better?   (ARM works better with other template tools? like plain Deno)\\ncost:\\n  - \\nresources:\\n  - \\nsecurity:\\n  - \\nreferences:\\n  - \\\"https://learn.microsoft.com/en-us/azure/azure-resource-manager/management/overview\\\"\\n---\\n\"\n    })\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kb2NzL215L3B1YmxpYy9zb2Z0d2FyZS9jbG91ZC9BenVyZS9zZXJ2aWNlLm1kIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kb2N1c2F1cnVzLy4vZG9jcy9teS9wdWJsaWMvc29mdHdhcmUvY2xvdWQvQXp1cmUvc2VydmljZS5tZD80NTQ0Il0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5leHBvcnQgY29uc3QgZnJvbnRNYXR0ZXIgPSB7fTtcbmV4cG9ydCBjb25zdCBjb250ZW50VGl0bGUgPSB1bmRlZmluZWQ7XG5leHBvcnQge2RlZmF1bHQgYXMgbWV0YWRhdGF9IGZyb20gJ0BzaXRlLy5kb2N1c2F1cnVzL2RvY3VzYXVydXMtcGx1Z2luLWNvbnRlbnQtZG9jcy9kZWZhdWx0L3NpdGUtZG9jcy1teS1wdWJsaWMtc29mdHdhcmUtY2xvdWQtYXp1cmUtc2VydmljZS1tZC04OTQuanNvbidcbmV4cG9ydCBjb25zdCBhc3NldHMgPSB7XG5cbn07XG5cbmltcG9ydCB7anN4IGFzIF9qc3h9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHt1c2VNRFhDb21wb25lbnRzIGFzIF9wcm92aWRlQ29tcG9uZW50c30gZnJvbSBcIkBtZHgtanMvcmVhY3RcIjtcbmV4cG9ydCBjb25zdCB0b2MgPSBbXTtcbmZ1bmN0aW9uIF9jcmVhdGVNZHhDb250ZW50KHByb3BzKSB7XG4gIGNvbnN0IF9jb21wb25lbnRzID0ge1xuICAgIGNvZGU6IFwiY29kZVwiLFxuICAgIHByZTogXCJwcmVcIixcbiAgICAuLi5fcHJvdmlkZUNvbXBvbmVudHMoKSxcbiAgICAuLi5wcm9wcy5jb21wb25lbnRzXG4gIH07XG4gIHJldHVybiBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgIGNoaWxkcmVuOiBcIi0tLVxcbm5hbWU6IEF6dXJlIEFwcCBTZXJ2aWNlXFxub3ZlcnZpZXc6IEhUVFAtYmFzZWQgc2VydmljZSBmb3IgaG9zdGluZyB3ZWIgYXBwbGljYXRpb25zLCBSRVNUIEFQSXMsIGFuZCBtb2JpbGUgYmFjayBlbmRzXFxuZmVhdHVyZXM6XFxuICAtIFxcXCJTY2FsZSBvdXQvaW4gKG1hY2hpbmVzLCBieSBhdXRvc2NhbGluZylcXFwiXFxuICAtIFxcXCJTY2FsZSB1cC9kb3duIChDUFUsIFJBTSlcXFwiXFxuICAtIFxcXCJDSS9DRCBhbmQgbWFudWFsIGRlcGxveVxcXCJcXG4gIC0gXFxcIkRlcGxveW1lbnQgc2xvdCAoc3dhcCBTVEcgUFJPRClcXFwiXFxuICAtIFxcXCJ2YXJpb3VzIGxhbmd1YWdlIChQeXRob24sIGV0YykgcnVudGltZVxcXCJcXG4gIC0gXFxcIm91dC1vZi10aGUtYm94IGF1dGhlbnRpY2F0aW9uIChvZiBlbmQtdXNlcikgd2l0aCBmZWRlcmF0ZWQgaWRlbnRpdHkgcHJvdmlkZXJzIGxpa2UgZmFjZWJvb2tcXFwiXFxubGltaXRzOlxcbiAgLSBcXFwiYnVpbHQtaW4gaW1hZ2UgaGlnaGVyIGxhdGVuY3kgcmVhZCBzdG9yYWdlXFxcIlxcbnJlZmVyZW5jZXM6XFxuICAtIFxcXCJodHRwczovL2xlYXJuLm1pY3Jvc29mdC5jb20vZW4tdXMvdHJhaW5pbmcvbW9kdWxlcy9pbnRyb2R1Y3Rpb24tdG8tYXp1cmUtYXBwLXNlcnZpY2UvMi1henVyZS1hcHAtc2VydmljZVxcXCJcXG4gIC0gXFxcImh0dHBzOi8vbGVhcm4ubWljcm9zb2Z0LmNvbS9lbi11cy90cmFpbmluZy9tb2R1bGVzL2ludHJvZHVjdGlvbi10by1henVyZS1hcHAtc2VydmljZS8zLWF6dXJlLWFwcC1zZXJ2aWNlLXBsYW5zXFxcIlxcbiAgLSBcXFwiaHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL2VuLXVzL3RyYWluaW5nL21vZHVsZXMvaW50cm9kdWN0aW9uLXRvLWF6dXJlLWFwcC1zZXJ2aWNlLzYtbmV0d29yay1mZWF0dXJlc1xcXCJcXG5TZXJ2aWNlUGxhbjpcXG4gIG92ZXJ2aWV3OiBcXFwiYW4gYXBwIGFsd2F5cyBydW5zIGluIGFuIEFwcCBTZXJ2aWNlIHBsYW5cXFwiXFxuICBkZWZpbmVzOlxcbiAgICAtIFxcXCJPU1xcXCJcXG4gICAgLSBcXFwiUmVnaW9uXFxcIlxcbiAgICAtIFxcXCJOdW1iZXIsIHNpemUgb2YgVk1cXFwiXFxuICAgIC0gXFxcIlByaWNpbmcgdGllclxcXCJcXG4gIHVzZTpcXG4gICAgLSBcXFwic2F2ZSBtb25leSBieSBwdXR0aW5nIGFwcHMgaW4gc2FtZSBBcHAgU2VydmljZSBwbGFuXFxcIlxcbiAgICAtIFxcXCJzY2FsZSBpbmRlcGVuZGVudGx5IGJ5IHVzaW5nIHNlcGFyYXRlIEFwcCBTZXJ2aWNlIHBsYW5cXFwiXFxuICBkZXBsb3ltZW50U2xvdDpcXG4gICAgdXNlOlxcbiAgICAgIC0gXFxcInN0ZywgcHJvZCBzd2FwXFxcIlxcbiAgICAgIC0gXFxcInBlcmNlbnRhZ2UgdGVzdGluZzogcmFuZG9tIGFzc2lnbiBjbGllbnQgc2Vzc2lvbnNcXFwiXFxuICBhdXRvc2NhbGluZzpcXG4gICAgRGVuaWFsT2ZTZXJ2aWNlOlxcbiAgICAgIG92ZXJ2aWV3OiBcXFwiYmV0dGVyIGZpbHRlciBiZWZvcmUgcmVhY2hpbmcgc2VydmljZSAoYXV0b3NjYWxpbmcgd291bGQgYmUgZXhwZW5zaXZlKVxcXCJcXG4gICAgdXNlOlxcbiAgICAgIC0gXFxcIm92ZXJoZWFkIG1vbml0b3JpbmcgcmVzb3VyY2VzIGFuZCB0cmlnZ2VyIHNjYWxpbmcgZXZlbnQsIGluIGxvbmctdGVybSBiZXR0ZXIgbWFudWFsbHkgc2NhbGUgc3lzdGVtXFxcIlxcbiAgICAgIC0gXFxcImh0dHBzOi8vbGVhcm4ubWljcm9zb2Z0LmNvbS9lbi11cy90cmFpbmluZy9tb2R1bGVzL3NjYWxlLWFwcHMtYXBwLXNlcnZpY2UvMy1hcHAtc2VydmljZS1hdXRvc2NhbGUtY29uZGl0aW9ucy1ydWxlc1xcXCJcXG5uZXR3b3JrOlxcbiAgb3ZlcnZpZXc6IFxcXCJieSBkZWZhdWx0LCBvbmx5IGludGVybmV0XFxcIlxcbmRlcGxveTpcXG4gIGNvbW1hbmQ6IFxcXCJheiB3ZWJhcHAgdXBcXFwiXFxuICBleGFtcGxlUmVzdWx0OiB7XFxcIlVSTFxcXCI6IFxcXCJodHRwOi8vYXoyMDRhcHAxMDY4MC5henVyZXdlYnNpdGVzLm5ldFxcXCIsIFxcXCJhcHBzZXJ2aWNlcGxhblxcXCI6IFxcXCJhc3BfM1xcXCIsIFxcXCJsb2NhdGlvblxcXCI6IFxcXCJlYXN0dXNcXFwiLCBcXFwibmFtZVxcXCI6IFxcXCJhejIwNGFwcDEwNjgwXFxcIiwgXFxcIm9zXFxcIjogXFxcIldpbmRvd3NcXFwiLCBcXFwicmVzb3VyY2Vncm91cFxcXCI6IFxcXCJyZ1xcXCJ9XFxuICBcXG53ZWJhcHA6XFxuICBjb25maWc6XFxuICAgIG92ZXJ2aWV3OiBcXFwiYXBwIHNldHRpbmdzIHBhc3NlZCBhcyBlbnZpcm9ubWVudCB2YXJpYWJsZXMgKGVuY3J5cHRlZC1hdC1yZXN0KVxcXCJcXG4gICAgQ29ubmVjdGlvblN0cmluZzpcXG4gICAgICBvdmVydmlldzogXFxcInNpbWlsYXIgdG8gYXBwLXNldHRpbmdcXFwiXFxuICAgIEdlbmVyYWxTZXR0aW5nOlxcbiAgICAgIC0gXFxcIlN0YWNrU2V0dGluZyAodGhpbmsgRG9ja2VyIEltYWdlKVxcXCJcXG4gICAgICAtIFxcXCJQbGF0Zm9ybVNldHRpbmdcXFwiXFxuICAgICAgLSBkZWJ1Z2dpbmdcXG4gICAgICAtIGNsaWVudENlcnRcXG4gICAgcGF0aE1hcHBpbmc6XFxuICAgICAgb3ZlcnZpZXc6IFxcXCJ0aGluayBEb2NrZXIgQ29udGFpbmVyIHZvbHVtZVxcXCJcXG4gICAgbG9nZ2luZzpcXG4gICAgICBvdmVydmlldzogXFxcImFwcCwgZGVwbG95bWVudCBsb2dnaW5nXFxcIlxcbiAgICAgIHJlZmVyZW5jZXM6XFxuICAgICAgICAtIFxcXCJodHRwczovL2xlYXJuLm1pY3Jvc29mdC5jb20vZW4tdXMvdHJhaW5pbmcvbW9kdWxlcy9jb25maWd1cmUtd2ViLWFwcC1zZXR0aW5ncy81LWVuYWJsZS1kaWFnbm9zdGljLWxvZ2dpbmdcXFwiXFxuXFxuLS0tXFxuXFxuXFxuLS0tXFxubmFtZTogQXp1cmUgRnVuY3Rpb25zXFxub3ZlcnZpZXc6IHxcXG4gIHNlcnZlcmxlc3NcXG4gIEF6dXJlIEZ1bmN0aW9ucyBvZmZlcnMgbW9yZSBkZXZlbG9wZXIgcHJvZHVjdGl2aXR5IHRoYW4gQXp1cmUgQXBwIFNlcnZpY2UgV2ViSm9icy4gXFxuICBPZmZlcnMgbW9yZSBvcHRpb25zIGZvciBwcm9ncmFtbWluZyBsYW5ndWFnZXMsIGRldi1lbnYsIEF6dXJlIHNlcnZpY2UgaW50ZWdyYXRpb24sIGFuZCBwcmljaW5nLiBcXG4gIEZvciBtb3N0IHNjZW5hcmlvcywgaXQncyB0aGUgYmVzdCBjaG9pY2UuXFxuZmVhdHVyZXM6XFxuICAtIFxcXCJSdW5zIGluIEF6dXJlLCBvciBsb2NhbGx5XFxcIlxcbmxpbWl0czpcXG4gIC0gXFxcIlxcXCJcXG51c2U6XFxuY29uZmlnOlxcbiAgb3ZlcnZpZXc6IFxcXCJ1c2UgZW52LXZhclxcXCJcXG4gIHRyaWdnZXI6IFxcXCIxIHRvIDEgZnVuY3Rpb25cXFwiXFxuICBiaW5kaW5nOlxcbiAgICBvdmVydmlldzogb3B0aW9uYWwsIHN1cHBvcnRzIChlLmcuIGFkZGl0aW9uYWwgb3V0cHV0IHRvIGEgcXVldWUpIFxcbiAgICBubyBlcXVpdmFsZW50IGluIEFXUyBMYW1iZGE/XFxuZnVuY3Rpb25BcHA6XFxuICBvdmVydmlldzogfFxcbiAgICBleGVjdXRpb24gY29udGV4dCwgdW5pdCBvZiBkZXBsb3ltZW50IGFuZCBtYW5hZ2VtZW50IGZvciBtdWx0aXBsZSBmdW5jdGlvbnNcXG5yZWZlcmVuY2VzOlxcbiAgLSBcXFwiaHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL2VuLXVzL3RyYWluaW5nL21vZHVsZXMvZXhwbG9yZS1henVyZS1mdW5jdGlvbnMvMi1henVyZS1mdW5jdGlvbnMtb3ZlcnZpZXdcXFwiXFxuaG9zdFBsYW46XFxuICAtIG5hbWU6IENvbnN1bXB0aW9uXFxuICAgIHRhZ3M6XFxuICAgICAgLSBcXFwiYmFzaWNcXFwiXFxuICAgIHRpbWVvdXRNaW51dGVzOlxcbiAgICAgIGRlZmF1bHQ6IDVcXG4gICAgICBtYXg6IDEwXFxuICAgIGRlc2M6IHxcXG4gICAgICBkZWZhdWx0XFxuICAtIG5hbWU6IFByZW1pdW0gXFxuICAgIHRhZ3M6XFxuICAgICAgLSBcXFwiYmFzaWNcXFwiXFxuICAgIGRlc2M6IHxcXG4gICAgICBwcmUtd2FybSwgdmlydHVhbCBuZXR3b3Jrc1xcbiAgLSBuYW1lOiBEZWRpY2F0ZWQgXFxuICAgIHRhZ3M6XFxuICAgICAgLSBcXFwiYmFzaWNcXFwiXFxuRHVyYWJsZTpcXG4gIG92ZXJ2aWV3OiB8XFxuICAgIGV4dGVuc2lvbiBvZiBBenVyZSBGdW5jdGlvbnMgXFxuICAgIHBlcmZvcm0gbG9uZy1sYXN0aW5nLCBzdGF0ZWZ1bCBvcGVyYXRpb25zLCBvcmNoZXN0cmF0ZSBhIGxvbmctcnVubmluZyB3b3JrZmxvd1xcbiAgICBzZXJ2ZXJsZXNzIGhvc3RpbmcgbW9kZWwgKyAobWFuYWdlZCkgc3RhdGUsIGFjdGl2aXR5IG1vbml0b3JpbmcsIHN5bmNocm9uaXphdGlvbiwgYW5kIHJ1bnRpbWUgY29uY2VybnNcXG4gICAgbm8gcXVldWUgaXMgbmVlZGVkLCBzdGF0ZSBpcyBtYW5hZ2VkXFxuICB1c2U6XFxuICAgIC0gZnVuY3Rpb25zIGluIGEgZ3JhcGhcXG4gICAgLSBmYW4tb3V0L2Zhbi1pblxcbiAgICAtIGV4YW1wbGUgfFxcbiAgICAgIEh1bWFuIGludGVyYWN0aW9uLCBhIHNpbXBsaWZpZWQgdmVyc2lvbjogaHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL2VuLXVzL3RyYWluaW5nL21vZHVsZXMvY3JlYXRlLWxvbmctcnVubmluZy1zZXJ2ZXJsZXNzLXdvcmtmbG93LXdpdGgtZHVyYWJsZS1mdW5jdGlvbnMvMy1kZXNpZ24tYS13b3JrZmxvdy1iYXNlZC1vbi1kdXJhYmxlLWZ1bmN0aW9uc1xcbiAgICAgIDIwMjQtMDUtMjQgc2FuZGJveCBkaWRuJ3Qgd29yayBkdWUgdG8gdGVtcG9yYXJ5IGNsb3VkIGlzc3VlXFxuICB0eXBlczpcXG4gICAgLSBDbGllbnQgZW50cnkgcG9pbnQgaGFuZGxpbmcgZXZlbnRcXG4gICAgLSBPcmNoZXN0cmF0b3IgIChDIyBvciBKYXZhU2NyaXB0KVxcbiAgICAtIEFjdGl2aXR5IGZ1bmN0aW9ucyBcXG4gIG9yY2hlc3RyYXRpb25GdW5jdGlvbjpcXG4gICAgZmVhdHVyZXM6XFxuICAgICAgLSB3b3JrZmxvd3MgaW4gY29kZVxcbiAgICAgIC0gT3V0cHV0IGZyb20gY2FsbGVkIGZ1bmN0aW9ucyBzYXZlZCBsb2NhbGx5ICh3aGF0IGxvY2FsPylcXG4gICAgICAtIHdoZW4gZnVuY3Rpb24gYXdhaXRzIGNoZWNrcG9pbnRzIHByb2dyZXNzIGF1dG9tYXRpY2FsbHkgIChmb3Igc2F2aW5nIENQVSBvbmx5PylcXG4gIHJlZmVyZW5jZXM6XFxuICAgIC0gY29tcGFyaXNvbiB3aXRoIEF6dXJlIExvZ2ljIEFwcHMgaHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL2VuLXVzL3RyYWluaW5nL21vZHVsZXMvY3JlYXRlLWxvbmctcnVubmluZy1zZXJ2ZXJsZXNzLXdvcmtmbG93LXdpdGgtZHVyYWJsZS1mdW5jdGlvbnMvMi13aGF0LWlzLWR1cmFibGUtZnVuY3Rpb25zXFxuLS0tXFxuXFxuXFxuLS0tXFxubmFtZTogQXp1cmUgQmxvYlxcbm92ZXJ2aWV3OiBtYXNzaXZlIGFtb3VudHMgb2YgdW5zdHJ1Y3R1cmVkIGRhdGFcXG51c2U6XFxuICAtIFxcXCJXcml0aW5nIHRvIGxvZyBmaWxlXFxcIlxcbmFjY2Vzc1RpZXI6XFxuICBvdmVydmlldzogXFxcImJsb2Igc3dpdGNoIGJldHdlZW4gYWNjZXNzIHRpZXJzIGFueSB0aW1lXFxcIlxcbiAgbGlzdDpcXG4gICAgLSBob3RcXG4gICAgLSBjb29sXFxuICAgIC0gY29sZFxcbiAgICAtIGFyY2hpdmUgKG9mZmxpbmUsIG5vIHIvdylcXG4gIGFyY2hpdmVSZWh5ZHJhdGU6XFxuICAgIC0gY29weSB0byBob3QvY29vbCB3aXRoIG5ldyBuYW1lXFxuICAgIC0gcmVoeWRyYXRlXFxubGlmZWN5Y2xlOlxcbiAgb3ZlcnZpZXc6IHBvbGljeSBpbiAuanNvblxcbiAgZmVhdHVyZXM6XFxuICAgIC0gVHJhbnNpdGlvbiBibG9icyB0aWVyXFxuICAgIC0gRGVsZXRlIFxcbiAgICAtIHJ1bGVzIHRvIHJ1biBvbmNlIHBlciBkYXkgYXQgc3RvcmFnZSBhY2NvdW50IGxldmVsXFxuICAgIC0gcnVsZXMgdG8gY29udGFpbmVycyBvciBhIHN1YnNldCBvZiBibG9icyAodXNpbmcgcHJlZml4ZXMgYXMgZmlsdGVycylcXG5cXG5yZXNvdXJjZXM6XFxuICAtIFN0b3JhZ2UgYWNjb3VudCAobGlrZSBBV1MgYnVja2V0KSBuZWVkIHRvIGJlIHVuaXF1ZSBhbW9uZyBhbGwgQXp1cmUgdXNlcnM/XFxuICAtIGNvbnRhaW5lciAgKGRpciBuYW1lKVxcbiAgLSBibG9iOlxcbiAgICAtIGJsb2NrXFxuICAgIC0gYXBwZW5kXFxuICAgIC0gcGFnZSAoc3VwcG9ydHMgcmFuZG9tIGFjY2VzcywgdXNlZCB0byBzdG9yZSB2aXJ0dWFsIGhhcmQgZHJpdmUgKFZIRCkpXFxuICAtIG1ldGFkYXRhOlxcbiAgICBvdmVydmlldzogQ29udGFpbmVycyBhbmQgYmxvYnMgc3VwcG9ydCBjdXN0b20gbWV0YWRhdGEsIHJlcHJlc2VudGVkIGFzIEhUVFAgaGVhZGVycy5cXG5zZWN1cml0eTpcXG4gIC0gYXV0by1lbmNyeXB0ZWQgIFN0b3JhZ2UgU2VydmljZSBFbmNyeXB0aW9uIChTU0UpXFxuICAtIG9wdGlvbnM6XFxuICAgIC0gQXp1cmUgRGlzayBFbmNyeXB0aW9uXFxuICAgIC0ga2V5cyAgaHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL2VuLXVzL3RyYWluaW5nL21vZHVsZXMvZXhwbG9yZS1henVyZS1ibG9iLXN0b3JhZ2UvNC1ibG9iLXN0b3JhZ2Utc2VjdXJpdHlcXG5mZWF0dXJlczpcXG4gIC0gXFxcInN0YXRpYyBsaW1pdGVkIHdlYnNpdGUgc2VwYXJhdGUgZnJvbSAkd2ViIChjb250YWluZXIpXFxcIlxcbmxpbWl0czpcXG4gIC0gXFxcIlxcXCJcXG5yZWZlcmVuY2VzOlxcbiAgLSBcXFwiXFxcIlxcbi0tLVxcblxcblxcbi0tLVxcbm5hbWU6IEF6dXJlIENvc21vcyBEQlxcbm92ZXJ2aWV3OiB8IFxcbiAgZnVsbHkgbWFuYWdlZCBOb1NRTCwgbXVsdGktbWFzdGVyXFxuICBhbmQgcmVsYXRpb25hbD8gKHdlYiB1aSBzYXlzIHNvKVxcbiAgQVBJIGZvciBOb1NRTCAoZG9jdW1lbnQgbW9kZWwpIGlzIG5hdGl2ZSwgb3RoZXJzIGp1c3QgbWltaWNcXG4gIEFQSSBmb3IgVGFibGUgc3RvcmVzIGRhdGEgaW4ga2V5L3ZhbHVlICghYmFkIG5hbWUpXFxuQVBJOlxcbiAgLSBuYW1lOiBBUEkgZm9yIFBvc3RncmVTUUxcXG4gICAgZGVzYzogfFxcbiAgICAgIEF6dXJlIENvc21vcyBEQiBmb3IgUG9zdGdyZVNRTCBpcyBhIG1hbmFnZWQgc2VydmljZSBmb3IgcnVubmluZyBQb3N0Z3JlU1FMIGF0IGFueSBzY2FsZVxcbiAgICAgIHAxIGhvdz8gIFJEQj8gICBzb2x2ZXMgc2NhbGUgcHJvYmxlbT9cXG5mZWF0dXJlczpcXG4gIC0gXFxcImxlc3MgdGhhbiAxMCBtaWxsaXNlY29uZHMgYXQgdGhlIDk5dGggcGVyY2VudGlsZVxcXCJcXG4gIC0gXFxcIm5vIHJlbGF0aW9uYWwgREIsIGJ1dCBvbmx5IGNvbHVtbi1mYW1pbHk/XFxcIlxcbiAgLSBcXFwic3RvcmVkIHByb2NlZHVyZXMsIHRyaWdnZXJzLCBhbmQgdXNlci1kZWZpbmVkIGZ1bmN0aW9ucyAoVURGcykgaW4gSmF2YVNjcmlwdFxcXCJcXG5jaGFuZ2VGZWVkOlxcbiAgb3ZlcnZpZXc6IGluc2VydCwgdXBkYXRlIGJ1dCBub3QgZGVsZXRlIG5vd1xcbmNvc3Q6XFxuICAtIHByb3Zpc2lvbmVkIHRocm91Z2hwdXQsIGNvbnN1bWVkIHN0b3JhZ2Ugb24gaG91cmx5IGJhc2lzXFxuICAtIG9wZXJhdGlvbiAgcmVxdWVzdCB1bml0IChSVSlcXG5oaWVyYXJjaHk6IFxcbiAgLSBEQiBhY2NvdW50XFxuICAtIERCIChsaWtlIG5hbWVzcGFjZSlcXG4gIC0gKHBhcnRpdGlvbmVkKSBjb250YWluZXIgKHdpdGggaXRlbXM6IHJvdywgZG9jdW1lbnQsIGV0YylcXG5jb25zaXN0ZW5jeTpcXG4gIC0gU3Ryb25nXFxuICAtIEJvdW5kZWQgc3RhbGVuZXNzXFxuICAtIFNlc3Npb25cXG4gIC0gQ29uc2lzdGVudCBwcmVmaXhcXG4gIC0gRXZlbnR1YWxcXG5cXG5saW1pdHM6XFxuICAtIFxcXCJcXFwiXFxuc2VjdXJpdHk6XFxuICAtIFxcbnJlZmVyZW5jZXM6XFxuICAtIFxcXCJcXFwiXFxuLS0tXFxuXFxuLS0tXFxubmFtZTogQXp1cmUgQ29udGFpbmVyIFJlZ2lzdHJ5XFxub3ZlcnZpZXc6IG1hbmFnZWQsIHByaXZhdGUgRG9ja2VyIHJlZ2lzdHJ5XFxuZmVhdHVyZXM6XFxuICAtIENvbnRhaW5lciBSZWdpc3RyeSBUYXNrcyB0byBidWlsZCBjb250YWluZXIgaW1hZ2VzXFxubGltaXRzOlxcbiAgLSBcXG5jb3N0OlxcbiAgLSBcXG5yZXNvdXJjZXM6XFxuICAtIFxcbnNlY3VyaXR5OlxcbiAgLSBcXG5yZWZlcmVuY2VzOlxcbiAgLSBodHRwczovL2xlYXJuLm1pY3Jvc29mdC5jb20vZW4tdXMvYXp1cmUvY29udGFpbmVyLXJlZ2lzdHJ5L1xcbi0tLVxcblxcblxcbi0tLVxcbm5hbWU6IEF6dXJlIENvbnRhaW5lciBJbnN0YW5jZXNcXG5vdmVydmlldzogZmFzdGVzdCBhbmQgc2ltcGxlc3Qgd2F5IHRvIHJ1biBhIGNvbnRhaW5lclxcbmZlYXR1cmVzOlxcbiAgLSBcXFwicHVibGljIGludGVybmV0XFxcIlxcbmxpbWl0czpcXG4gIC0gXFxcIlxcXCJcXG5jb3N0OlxcbiAgLSBjcHUgc2Vjb25kc1xcbnJlc291cmNlczpcXG4gIC0gY29udGFpbmVyIGdyb3VwIChzYW1lIGhvc3QgbWFjaGluZSBhbmQgRE5TIG5hbWUsIGxpa2UgcG9kIGluIEt1YmVybmV0ZXMpXFxuc2VjdXJpdHk6XFxuICAtIFxcbnJlZmVyZW5jZXM6XFxuICAtIFxcXCJcXFwiXFxuLS0tXFxuXFxuLS0tXFxubmFtZTogQXp1cmUgQ29udGFpbmVyIEFwcHNcXG5vdmVydmlldzogfFxcbiAgbWljcm9zZXJ2aWNlcyBhbmQgY29udGFpbmVyaXplZCBhcHBzIG9uIGEgc2VydmVybGVzcyBwbGF0Zm9ybSB0aGF0IHJ1bnMgb24gdG9wIG9mIEF6dXJlIEt1YmVybmV0ZXMgU2VydmljZVxcbiAgXFxuZmVhdHVyZXM6XFxuICAtIFxcXCJhdXRvIHNjYWxpbmdcXFwiXFxuICAtIFxcXCJCbHVlL0dyZWVuIGRlcGxveW1lbnRzLCBBL0IgdGVzdGluZyBzY2VuYXJpb1xcXCJcXG4gIC0gYnVpbHQtaW4gYXV0aGVudGljYXRpb24gYW5kIGF1dGhvcml6YXRpb24gbGlrZSBmYWNlYm9va1xcbmxpbWl0czpcXG4gIC0gXFxcImxpbnV4L2FtZDY0ICBvbmx5XFxcIlxcbiAgLSBubyBwcml2aWxlZ2VkIGNvbnRhaW5lclxcbmNvc3Q6XFxuICAtIFxcbnJlc291cmNlczpcXG4gIC0gQ29udGFpbmVyIEFwcHMgZW52aXJvbm1lbnQsIGFzIHNlY3VyZSBib3VuZGFyeSBhcm91bmQgZ3JvdXBzIG9mIGNvbnRhaW5lciBhcHBzXFxuICAtIEFwcCAoc2hhcmUgaGFyZCBkaXNrIGFuZCBuZXR3b3JrIHJlc291cmNlcykgd2l0aCBzZWNyZXRzXFxuICAtIGNvbnRhaW5lcnNcXG5zZWN1cml0eTpcXG4gIC0gXFxucmVmZXJlbmNlczpcXG4gIC0gXFxcIlxcXCJcXG4tLS1cXG5cXG4tLS1cXG5uYW1lOiBBenVyZSBNaWNyb3NvZnQgaWRlbnRpdHkgcGxhdGZvcm1cXG5vdmVydmlldzogfFxcbiAgc2lnbiBpbiB1c2luZyBNaWNyb3NvZnQgaWRlbnRpdGllcyBvciBzb2NpYWwgYWNjb3VudFxcbiAgc3VwcG9ydHMgT0F1dGggMi4wXFxuZmVhdHVyZXM6XFxuICAtIFxcXCJcXFwiXFxubGltaXRzOlxcbiAgLSBcXFwiXFxcIlxcbmNvc3Q6XFxuICAtIFxcbnJlc291cmNlczpcXG4gIC0gfFxcbiAgICBUaGUgYXBwbGljYXRpb24gb2JqZWN0IGlzIHRoZSBnbG9iYWwgcmVwcmVzZW50YXRpb24gb2YgeW91ciBhcHBsaWNhdGlvbiBmb3IgdXNlIGFjcm9zcyBhbGwgdGVuYW50cywgYW5kIHRoZSBzZXJ2aWNlIHByaW5jaXBhbCBpcyB0aGUgbG9jYWwgcmVwcmVzZW50YXRpb24gZm9yIHVzZSBpbiBhIHNwZWNpZmljIHRlbmFudC5cXG5zZWN1cml0eTpcXG4gIC0gcGVybWlzc2lvbnM6XFxuICAgIC0gZGVsZWdhdGVkOlxcbiAgICAgIG92ZXJ2aWV3OiBhY3QgYXMgYSBzaWduZWQtaW4gdXNlclxcbiAgICAtIGFwcE9ubHk6XFxuICAgICAgb3ZlcnZpZXc6IHJ1biB3aXRob3V0IGEgc2lnbmVkLWluIHVzZXIgcHJlc2VudFxcbmNsaWVudEFwcDpcXG4gIG92ZXJ2aWV3OiBcXG4gICAgYWNxdWlyZSBzZWN1cml0eSB0b2tlbnNcXG4gIHR5cGVzOlxcbiAgICBQdWJsaWM6IHxcXG4gICAgICBydW4gb24gZGV2aWNlcyBvciBkZXNrdG9wIGNvbXB1dGVycyBvciBpbiBhIHdlYiBicm93c2VyLiBub3QgdHJ1c3RlZCB0byBzYWZlbHkga2VlcCBhcHBsaWNhdGlvbiBzZWNyZXRzXFxuICAgIENvbmZpZGVudGlhbDogfFxcbiAgICAgIHJ1biBvbiBzZXJ2ZXJzICh3ZWIgYXBwcywgd2ViIEFQSSBhcHBzLCBvciBldmVuIHNlcnZpY2UvZGFlbW9uIGFwcHMpLiBjb25zaWRlcmVkIGRpZmZpY3VsdCB0byBhY2Nlc3MsIHRoZXJlZm9yZSBjYXBhYmxlIG9mIGtlZXBpbmcgYW4gYXBwbGljYXRpb24gc2VjcmV0IChpbmNsLiBjbGllbnQgSUQsIGNsaWVudCBzZWNyZXQpXFxuXFxucmVmZXJlbmNlczpcXG4gIC0gXFxcIlxcXCJcXG4tLS1cXG5cXG4tLS1cXG5uYW1lOiBBenVyZSBzdG9yYWdlXFxub3ZlcnZpZXc6IFxcbmZlYXR1cmVzOlxcbiAgLSBcXFwiXFxcIlxcbmxpbWl0czpcXG4gIC0gXFxcIlxcXCJcXG5jb3N0OlxcbiAgLSBcXG5yZXNvdXJjZXM6XFxuICAtIGFcXG5zZWN1cml0eTpcXG4gIC0gc2hhcmVkIGFjY2VzcyBzaWduYXR1cmVzIChTQVMpICAobGlrZSBBV1MgcHJlc2lnbmVkIHVybClcXG4gIC0gc3RvcmVkQWNjZXNzOlxcbiAgICBvdmVydmlldzogfFxcbiAgICAgIEEgc3RvcmVkIGFjY2VzcyBwb2xpY3k6IGFuIGV4dHJhIGxldmVsIG9mIGNvbnRyb2wgb3ZlciBzZXJ2aWNlLWxldmVsIHNoYXJlZCBhY2Nlc3Mgc2lnbmF0dXJlcyAoU0FTKSBvbiB0aGUgc2VydmVyIHNpZGUuIFxcbiAgICAgIGNoYW5nZSB0aGUgc3RhcnQgdGltZSwgZXhwaXJ5IHRpbWUsIG9yIHBlcm1pc3Npb25zIGZvciBhIHNpZ25hdHVyZSwgb3IgdG8gcmV2b2tlIGl0IGFmdGVyIGl0IGlzIGlzc3VlZC5cXG5yZWZlcmVuY2VzOlxcbiAgLSBcXFwiXFxcIlxcbi0tLVxcblxcbi0tLVxcbm5hbWU6IEF6dXJlIE1pY3Jvc29mdCBHcmFwaCBcXG5vdmVydmlldzogfFxcbiAgZ2F0ZXdheSB0byBkYXRhIChNaWNyb3NvZnQgMzY1LCBXaW5kb3dzIDEwLCBhbmQgRW50ZXJwcmlzZSBNb2JpbGl0eSArIFNlY3VyaXR5KSwgaW50ZWxsaWdlbmNlIGluIE1pY3Jvc29mdCAzNjUuIFxcbiAgKHJlYWRzIGxpa2UgZGF0YSBjb2xsZWN0aW9uIG9mIGNvbnN1bWVyIGRhdGEpXFxuICBSRVNUZnVsIHdlYiBBUEkgXFxuZmVhdHVyZXM6XFxuICAtIFxcXCJcXFwiXFxubGltaXRzOlxcbiAgLSBcXFwiXFxcIlxcbmNvc3Q6XFxuICAtIFxcbnJlc291cmNlczpcXG4gIC0gYVxcbnNlY3VyaXR5OlxcbiAgLSBcXG5yZWZlcmVuY2VzOlxcbiAgLSBcXFwiXFxcIlxcbi0tLVxcblxcbi0tLVxcbm5hbWU6IEF6dXJlIEtleSBWYXVsdFxcbm92ZXJ2aWV3OiB2YXVsdHMgYW5kIG1hbmFnZWQgaGFyZHdhcmUgc2VjdXJpdHkgbW9kdWxlKEhTTSkgcG9vbHNcXG5mZWF0dXJlczpcXG4gIC0gXFxcIlxcXCJcXG5saW1pdHM6XFxuICAtIFxcXCJcXFwiXFxuY29zdDpcXG4gIC0gXFxucmVzb3VyY2VzOlxcbiAgLSBcXG5zZWN1cml0eTpcXG4gIC0gXFxucmVmZXJlbmNlczpcXG4gIC0gXFxcIlxcXCJcXG4tLS1cXG5cXG5cXG4tLS1cXG5uYW1lOiBBenVyZSBtYW5hZ2VkIGlkZW50aXRpZXNcXG5vdmVydmlldzogfFxcbiAgc2VjdXJlIGNvbW11bmljYXRpb24gYmV0d2VlbiBkaWZmZXJlbnQgY29tcG9uZW50c1xcbiAgSW50ZXJuYWxseSwgbWFuYWdlZCBpZGVudGl0aWVzIGFyZSBzZXJ2aWNlIHByaW5jaXBhbHMgb2YgYSBzcGVjaWFsIHR5cGUsIHdoaWNoIGFyZSBsb2NrZWQgdG8gb25seSBiZSB1c2VkIHdpdGggQXp1cmUgcmVzb3VyY2VzLlxcbnR5cGVzOlxcbiAgLSBzeXN0ZW0tYXNzaWduZWQgICBhdXRvbWF0aWNcXG4gIC0gdXNlci1hc3NpZ25lZFxcbmZlYXR1cmVzOlxcbiAgLSBcXFwiXFxcIlxcbmxpbWl0czpcXG4gIC0gXFxcIlxcXCJcXG5jb3N0OlxcbiAgLSBcXG5yZXNvdXJjZXM6XFxuICAtIGFcXG5zZWN1cml0eTpcXG4gIC0gXFxucmVmZXJlbmNlczpcXG4gIC0gXFxcIlxcXCJcXG4tLS1cXG5cXG5cXG4tLS1cXG5uYW1lOiBBenVyZSBBcHAgQ29uZmlndXJhdGlvbiBcXG5vdmVydmlldzogfFxcbiAgY2VudHJhbGx5IG1hbmFnZSBhbmQgc2VjdXJlIGNvbmZpZ3VyYXRpb24gKGJ1dCBub3Qgc2VjcmV0KSwgbWFuYWdlIGFwcCBmZWF0dXJlcyAoZmxhZylcXG4gIGNvbXBsZW1lbnRzIEF6dXJlIEtleSBWYXVsdCAoc2VjcmV0KVxcbiAgY29uZmlndXJhdGlvbiBkYXRhIGFzIGtleS12YWx1ZShzdHJpbmcpIHBhaXJzIChrZXkgc2VwYXJhdG9yIHN1Y2ggYXMgLyBvciA6IG5vdCBpbnRlcnByZXRlZClcXG4gICh3aHkgdXNlIGl0PyBzaW1wbHkgdXNlIGN1c3RvbSBhcHAgZmlsZSBvciBlbnYtdmFyKVxcbmZlYXR1cmVzOlxcbiAgLSBcXFwiXFxcIlxcbmxpbWl0czpcXG4gIC0gXFxcIlxcXCJcXG5jb3N0OlxcbiAgLSBcXG5zZWN1cml0eTpcXG4gIC0gXFxucmVmZXJlbmNlczpcXG4gIC0gXFxcIlxcXCJcXG4tLS1cXG5cXG4tLS1cXG5uYW1lOiBBenVyZSBBUEkgTWFuYWdlbWVudFxcbm92ZXJ2aWV3OiB8XFxuICBwdWJsaXNoLCByYXRlIGxpbWl0XFxuICBkZXZlbG9wZXIgZW5nYWdlbWVudCwgYnVzaW5lc3MgaW5zaWdodHMsIGFuYWx5dGljcywgc2VjdXJpdHksIGFuZCBwcm90ZWN0aW9uXFxuZmVhdHVyZXM6XFxuICAtIFxcXCJcXFwiXFxubGltaXRzOlxcbiAgLSBQb2xpY3k6IFhNTCB3aXRoIEMjIGluc2lkZSAoYmFkIHRlY2guIGNob2ljZSlcXG5jb3N0OlxcbiAgLSBcXG5yZXNvdXJjZXM6XFxuICAtIGFcXG5zZWN1cml0eTpcXG4gIC0gXFxucmVmZXJlbmNlczpcXG4gIC0gXFxcIlxcXCJcXG4tLS1cXG5cXG4tLS1cXG5uYW1lOiBBenVyZSBFdmVudCBHcmlkXFxub3ZlcnZpZXc6IHxcXG4gIGV2ZW50IGJyb2tlciwgY3VzdG9tIHRvcGljXFxuICBkZWxpdmVyIGVhY2ggZXZlbnQgYXQgbGVhc3Qgb25jZSBmb3IgZWFjaCBtYXRjaGluZyBzdWJzY3JpcHRpb24gaW1tZWRpYXRlbHkgd2l0aCByZXRyeVxcbiAgKGdlbmVyYWxseSBub3QgcXVldWUpXFxuZmVhdHVyZXM6XFxuICAtIFxcXCJtdWx0aWNhc3RcXFwiXFxuICAtIENsb3VkRXZlbnRzIGZvcm1hdCAgKGdyZWF0IHRvIHJlbHkgbGVzcyBvbiBBenVyZSlcXG5saW1pdHM6XFxuICAtIG5vIGd1YXJhbnRlZSBvcmRlciBmb3IgZXZlbnQgZGVsaXZlcnlcXG5vbkRlbGl2ZXJ5RXJyb3I6XFxuICAtIHJldHJ5IFxcbiAgLSBkZWFkLWxldHRlciBcXG4gIC0gZHJvcCBcXG5jb3N0OlxcbiAgLSBcXG5yZXNvdXJjZXM6XFxuICAtIFxcbnNlY3VyaXR5OlxcbiAgLSBcXG5yZWZlcmVuY2VzOlxcbiAgLSBcXFwiXFxcIlxcbi0tLVxcblxcbi0tLVxcbm5hbWU6IEF6dXJlIEV2ZW50IEh1YnNcXG5vdmVydmlldzogfFxcbiAgcmVjZWl2ZSBhbmQgcHJvY2VzcyBtaWxsaW9ucyBvZiBldmVudHMgcGVyIHNlY29uZFxcbiAgdGltZS1yZXRlbnRpb24gZHVyYWJsZSBidWZmZXIgXFxuZmVhdHVyZXM6XFxuICAtIFBhYVMgS2Fma2FcXG4gIC0gQ2FwdHVyZVxcbmxpbWl0czpcXG4gIC0gXFxuY29zdDpcXG4gIC0gXFxucmVzb3VyY2VzOlxcbiAgLSBcXG5zZWN1cml0eTpcXG4gIC0gXFxucmVmZXJlbmNlczpcXG4gIC0gXFxcImh0dHBzOi8vbGVhcm4ubWljcm9zb2Z0LmNvbS9lbi11cy90cmFpbmluZy9tb2R1bGVzL2F6dXJlLWV2ZW50LWh1YnMvMi1ldmVudC1odWJzLW92ZXJ2aWV3XFxcIlxcbi0tLVxcblxcbi0tLVxcbm5hbWU6IEF6dXJlIFNlcnZpY2UgQnVzIHF1ZXVlXFxub3ZlcnZpZXc6IHxcXG4gIHF1ZXVlLCBwdWItc3ViKDE6biksIG1lc3NhZ2UgYnJva2VyXFxuICBcXG5mZWF0dXJlczpcXG4gIC0gKEZJRk8pIGd1YXJhbnRlZSBpbiBcXFwic2Vzc2lvblxcXCJcXG4gIC0gcHViLXN1YiAoc3Vic2NyaXB0aW9uIGlzIGxpa2UgdmlydHVhbCBxdWV1ZSwgZHVyYWJsZT8pXFxubGltaXRzOlxcbiAgLSBcXG5jb3N0OlxcbiAgLSBcXG5yZXNvdXJjZXM6XFxuICAtIFxcbnNlY3VyaXR5OlxcbiAgLSBcXG5yZWZlcmVuY2VzOlxcbiAgLSBcXFwiaHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL2VuLXVzL3RyYWluaW5nL21vZHVsZXMvZGlzY292ZXItYXp1cmUtbWVzc2FnZS1xdWV1ZS8yLWNob29zZS1xdWV1ZS1zb2x1dGlvblxcXCJcXG4tLS1cXG5cXG4tLS1cXG5uYW1lOiBBenVyZSBTdG9yYWdlIHF1ZXVlXFxub3ZlcnZpZXc6IHxcXG4gIHNpbXBsZXIgcXVldWUgKG1vcmUgb24gc3RvcmFnZSlcXG4gIFxcbmZlYXR1cmVzOlxcbiAgLSBtZXNzYWdlIHRpbWUtdG8tbGl2ZVxcbiAgLSB1cGRhdGUgbWVzc2FnZVxcbmxpbWl0czpcXG4gIC0gXFxuY29zdDpcXG4gIC0gXFxucmVzb3VyY2VzOlxcbiAgLSBcXG5zZWN1cml0eTpcXG4gIC0gXFxucmVmZXJlbmNlczpcXG4gIC0gXFxcIlxcXCJcXG4tLS1cXG5cXG4tLS1cXG5uYW1lOiBBenVyZSBBcHBsaWNhdGlvbiBJbnNpZ2h0c1xcbm92ZXJ2aWV3OiB8XFxuICBjb21wcmVoZW5zaXZlIG1vbml0b3JpbmcgaW5jbC4gQXBwbGljYXRpb24gTWFwLCBhbGVydFxcbmZlYXR1cmVzOlxcbiAgLSB3ZWJzaXRlIHVwIG1vbml0b3JpbmdcXG4gIC0gbG9nLCB0cmFjaW5nXFxuICAtIGF1dG8gaW5zdHJ1bWVudGF0aW9uXFxubGltaXRzOlxcbiAgLSBcXG5jb3N0OlxcbiAgLSBcXG5yZXNvdXJjZXM6XFxuICAtIFxcbnNlY3VyaXR5OlxcbiAgLSBcXG5yZWZlcmVuY2VzOlxcbiAgLSBcXFwiXFxcIlxcbi0tLVxcblxcblxcbi0tLVxcbm5hbWU6IEF6dXJlIENETlxcbm92ZXJ2aWV3OiB8XFxuICBDRE5cXG5mZWF0dXJlczpcXG4gIC0gYWNjZWxlcmF0ZSBkeW5hbWljIGNvbnRlbnQgKG9wdGltaXplIG5ldHdvcmspXFxubGltaXRzOlxcbiAgLSBcXG5jb3N0OlxcbiAgLSBcXG5yZXNvdXJjZXM6XFxuICAtIFxcbnNlY3VyaXR5OlxcbiAgLSBcXG5yZWZlcmVuY2VzOlxcbiAgLSBcXFwiXFxcIlxcbi0tLVxcblxcblxcbi0tLVxcbm5hbWU6IEF6dXJlIFJlc291cmNlIE1hbmFnZXJcXG5vdmVydmlldzogfFxcbiAgV2hlbiBhIHVzZXIgc2VuZHMgYSByZXF1ZXN0IGZyb20gYW55IG9mIHRoZSBBenVyZSB0b29scywgQVBJcywgb3IgU0RLcywgQVJNIHJlY2VpdmVzIHRoZSByZXF1ZXN0LiBBUk0gYXV0aGVudGljYXRlcyBhbmQgYXV0aG9yaXplcyB0aGUgcmVxdWVzdC4gVGhlbiwgQVJNIHNlbmRzIHRoZSByZXF1ZXN0IHRvIHRoZSBBenVyZSBzZXJ2aWNlLCB3aGljaCB0YWtlcyB0aGUgcmVxdWVzdGVkIGFjdGlvbi5cXG4gIGFzIG9mIDIwMjQtMDUtMjEsIEF6dXJlIHJlY29tbWVuZHMgQmljZXAgb3ZlciBBUk1cXG5mZWF0dXJlczpcXG4gIC0gcmVzaWxpZW5jeSBhbmQgY29udGludW91cyBhdmFpbGFiaWxpdHkgKGluIGNvbnRyb2wgcGxhbmUpXFxuICAtIEFSTSAgKGxpa2UgQVdTIGNsb3VkZm9ybWF0aW9uKSByZWFsIEpTT05cXG4gIC0gQmljZXAgIChEU0wgdW5saWtlIEFXUyBDREssIHNpbXBsZSwgY29tcGlsZXMgdG8gQVJNIGFuZCBKU09OKVxcbiAgLSBodHRwczovL2FrYS5tcy9iaWNlcGRlbW9cXG5saW1pdHM6XFxuICAtIGJpY2VwIHRvIGFybSBjb252ZXJzaW9uIHRvb2w/XFxuICAtIHdoaWNoIGlzIGJldHRlcj8gICAoQVJNIHdvcmtzIGJldHRlciB3aXRoIG90aGVyIHRlbXBsYXRlIHRvb2xzPyBsaWtlIHBsYWluIERlbm8pXFxuY29zdDpcXG4gIC0gXFxucmVzb3VyY2VzOlxcbiAgLSBcXG5zZWN1cml0eTpcXG4gIC0gXFxucmVmZXJlbmNlczpcXG4gIC0gXFxcImh0dHBzOi8vbGVhcm4ubWljcm9zb2Z0LmNvbS9lbi11cy9henVyZS9henVyZS1yZXNvdXJjZS1tYW5hZ2VyL21hbmFnZW1lbnQvb3ZlcnZpZXdcXFwiXFxuLS0tXFxuXCJcbiAgICB9KVxuICB9KTtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQocHJvcHMgPSB7fSkge1xuICBjb25zdCB7d3JhcHBlcjogTURYTGF5b3V0fSA9IHtcbiAgICAuLi5fcHJvdmlkZUNvbXBvbmVudHMoKSxcbiAgICAuLi5wcm9wcy5jb21wb25lbnRzXG4gIH07XG4gIHJldHVybiBNRFhMYXlvdXQgPyBfanN4KE1EWExheW91dCwge1xuICAgIC4uLnByb3BzLFxuICAgIGNoaWxkcmVuOiBfanN4KF9jcmVhdGVNZHhDb250ZW50LCB7XG4gICAgICAuLi5wcm9wc1xuICAgIH0pXG4gIH0pIDogX2NyZWF0ZU1keENvbnRlbnQocHJvcHMpO1xufVxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./docs/my/public/software/cloud/Azure/service.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RvY3VzYXVydXMvLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanM/MTE4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbXBvcnQge01EWENvbXBvbmVudHN9IGZyb20gJ21keC90eXBlcy5qcydcbiAqIEBpbXBvcnQge0NvbXBvbmVudCwgUmVhY3RFbGVtZW50LCBSZWFjdE5vZGV9IGZyb20gJ3JlYWN0J1xuICovXG5cbi8qKlxuICogQGNhbGxiYWNrIE1lcmdlQ29tcG9uZW50c1xuICogICBDdXN0b20gbWVyZ2UgZnVuY3Rpb24uXG4gKiBAcGFyYW0ge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSBjdXJyZW50Q29tcG9uZW50c1xuICogICBDdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgY29udGV4dC5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMuXG4gKlxuICogQHR5cGVkZWYgUHJvcHNcbiAqICAgQ29uZmlndXJhdGlvbiBmb3IgYE1EWFByb3ZpZGVyYC5cbiAqIEBwcm9wZXJ0eSB7UmVhY3ROb2RlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NoaWxkcmVuXVxuICogICBDaGlsZHJlbiAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbiB8IG51bGwgfCB1bmRlZmluZWR9IFtkaXNhYmxlUGFyZW50Q29udGV4dD1mYWxzZV1cbiAqICAgVHVybiBvZmYgb3V0ZXIgY29tcG9uZW50IGNvbnRleHQgKGRlZmF1bHQ6IGBmYWxzZWApLlxuICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuLyoqIEB0eXBlIHtSZWFkb25seTxNRFhDb21wb25lbnRzPn0gKi9cbmNvbnN0IGVtcHR5Q29tcG9uZW50cyA9IHt9XG5cbmNvbnN0IE1EWENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGVtcHR5Q29tcG9uZW50cylcblxuLyoqXG4gKiBHZXQgY3VycmVudCBjb21wb25lbnRzIGZyb20gdGhlIE1EWCBDb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz4gfCBNZXJnZUNvbXBvbmVudHMgfCBudWxsIHwgdW5kZWZpbmVkfSBbY29tcG9uZW50c11cbiAqICAgQWRkaXRpb25hbCBjb21wb25lbnRzIHRvIHVzZSBvciBhIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyB0aGVtIChvcHRpb25hbCkuXG4gKiBAcmV0dXJucyB7TURYQ29tcG9uZW50c31cbiAqICAgQ3VycmVudCBjb21wb25lbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlTURYQ29tcG9uZW50cyhjb21wb25lbnRzKSB7XG4gIGNvbnN0IGNvbnRleHRDb21wb25lbnRzID0gUmVhY3QudXNlQ29udGV4dChNRFhDb250ZXh0KVxuXG4gIC8vIE1lbW9pemUgdG8gYXZvaWQgdW5uZWNlc3NhcnkgdG9wLWxldmVsIGNvbnRleHQgY2hhbmdlc1xuICByZXR1cm4gUmVhY3QudXNlTWVtbyhcbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBDdXN0b20gbWVyZ2UgdmlhIGEgZnVuY3Rpb24gcHJvcFxuICAgICAgaWYgKHR5cGVvZiBjb21wb25lbnRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBjb21wb25lbnRzKGNvbnRleHRDb21wb25lbnRzKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gey4uLmNvbnRleHRDb21wb25lbnRzLCAuLi5jb21wb25lbnRzfVxuICAgIH0sXG4gICAgW2NvbnRleHRDb21wb25lbnRzLCBjb21wb25lbnRzXVxuICApXG59XG5cbi8qKlxuICogUHJvdmlkZXIgZm9yIE1EWCBjb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8UHJvcHM+fSBwcm9wZXJ0aWVzXG4gKiAgIFByb3BlcnRpZXMuXG4gKiBAcmV0dXJucyB7UmVhY3RFbGVtZW50fVxuICogICBFbGVtZW50LlxuICogQHNhdGlzZmllcyB7Q29tcG9uZW50fVxuICovXG5leHBvcnQgZnVuY3Rpb24gTURYUHJvdmlkZXIocHJvcGVydGllcykge1xuICAvKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuICBsZXQgYWxsQ29tcG9uZW50c1xuXG4gIGlmIChwcm9wZXJ0aWVzLmRpc2FibGVQYXJlbnRDb250ZXh0KSB7XG4gICAgYWxsQ29tcG9uZW50cyA9XG4gICAgICB0eXBlb2YgcHJvcGVydGllcy5jb21wb25lbnRzID09PSAnZnVuY3Rpb24nXG4gICAgICAgID8gcHJvcGVydGllcy5jb21wb25lbnRzKGVtcHR5Q29tcG9uZW50cylcbiAgICAgICAgOiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgfHwgZW1wdHlDb21wb25lbnRzXG4gIH0gZWxzZSB7XG4gICAgYWxsQ29tcG9uZW50cyA9IHVzZU1EWENvbXBvbmVudHMocHJvcGVydGllcy5jb21wb25lbnRzKVxuICB9XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgTURYQ29udGV4dC5Qcm92aWRlcixcbiAgICB7dmFsdWU6IGFsbENvbXBvbmVudHN9LFxuICAgIHByb3BlcnRpZXMuY2hpbGRyZW5cbiAgKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ }),

/***/ "./.docusaurus/docusaurus-plugin-content-docs/default/site-docs-my-public-software-cloud-azure-service-md-894.json":
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"id":"my/public/software/cloud/Azure/service","title":"service","description":"","source":"@site/docs/my/public/software/cloud/Azure/service.md","sourceDirName":"my/public/software/cloud/Azure","slug":"/my/public/software/cloud/Azure/service","permalink":"/note/docs/my/public/software/cloud/Azure/service","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"mySidebar","previous":{"title":"problem","permalink":"/note/docs/my/public/software/cloud/Azure/problem"},"next":{"title":"CDK","permalink":"/note/docs/my/public/software/cloud/CDK"}}');

/***/ })

}]);