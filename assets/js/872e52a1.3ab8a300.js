"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4590],{97379:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var o=t(24246),s=t(71670);const r={},c=void 0,i={id:"my/public/software/JavaScript/jest",title:"jest",description:"jest.spyOn(module.testables, 'functionName') doesn't throw an error, but it doesn't allow for proper mocking.",source:"@site/docs/my/public/software/JavaScript/jest.md",sourceDirName:"my/public/software/JavaScript",slug:"/my/public/software/JavaScript/jest",permalink:"/note/docs/my/public/software/JavaScript/jest",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"functional",permalink:"/note/docs/my/public/software/JavaScript/functional"},next:{title:"next.js",permalink:"/note/docs/my/public/software/JavaScript/next.js"}},a={},l=[{value:"surprise",id:"surprise",level:3},{value:"mock deep",id:"mock-deep",level:3},{value:"technique",id:"technique",level:3},{value:"ts-jest",id:"ts-jest",level:3}];function u(e){const n={a:"a",blockquote:"blockquote",code:"code",h3:"h3",ins:"ins",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"jest.spyOn(module.testables, 'functionName')"})," doesn't throw an error, but it doesn't allow for proper mocking."]}),"\n",(0,o.jsx)(n.h3,{id:"surprise",children:"surprise"}),"\n",(0,o.jsx)(n.p,{children:'Jest ("29.5.0" -> 29.7), restoreAllMocks no longer also calls clearAllMocks'}),"\n",(0,o.jsx)(n.h3,{id:"mock-deep",children:"mock deep"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://jestjs.io/docs/jest-object",children:"https://jestjs.io/docs/jest-object"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Modules that are mocked with jest.mock are mocked only for the file\nthat calls jest.mock. Another file that imports the module will get\nthe original implementation even if it runs after the test file that\nmocks the module.\n\n\n// spyOn works, watch out for jest.resetAllMocks();\njest.spyOn(module, 'func')\n\n"})}),"\n",(0,o.jsx)(n.h3,{id:"technique",children:"technique"}),"\n",(0,o.jsxs)(n.p,{children:['see also\n"Mocking Modules"\n',(0,o.jsx)(n.a,{href:"https://github.com/facebook/jest/blob/bc26cd79e60b7bf29d854293f0f011936fda1a5a/website/versioned_docs/version-29.5/MockFunctions.md#L127",children:"https://github.com/facebook/jest/blob/bc26cd79e60b7bf29d854293f0f011936fda1a5a/website/versioned_docs/version-29.5/MockFunctions.md#L127"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"// not work\njest.mock('axios');\nimport axios from 'axios';\nconst axiosMock = axios as unknown as typeof jest;\n\n// have to use type-cast in ts\n(<jest.Mock> axios.get).mockResolvedValue\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"// always returns a simple string, can take unknown types and strange objects as input\nfunction stringifyError(err) {\n  // need to rm 'stack'\n  // JSON.stringify not work with circular reference, may need https://github.com/douglascrockford/JSON-js/blob/master/cycle.js\n  if (err instanceof Object) return JSON.stringify(err, Object.getOwnPropertyNames(err));\n  else return err.toString();\n  //   else return `${err}`;\n}\n\ntry {\n    func() // expect failure\n    fail(\"Shouldn't reach this point\");\n    // OR  throw new Error(\"Shouldn't reach this point\");\n} catch (error) {\n    expect(error).toMatchInlineSnapshot(`[abcError]`);\n    \n    // below not good\n    expect(stringifyError(error)).\n    expect(\n            JSON.stringify(error, \n            Object.getOwnPropertyNames(error)  // need to remove 'stack' though as it's unlikely to match\n            )\n          ).toMatchInlineSnapshot();\n    expect({\n            name: error.name,\n            message: error.message,\n            cause: error.cause,\n          }).toMatchSnapshot();\n          \n          \n\n// https://github.com/facebook/jest/blob/bc26cd79e60b7bf29d854293f0f011936fda1a5a/website/versioned_docs/version-29.5/MockFunctions.md#L179\n\njest.mock('./path');\nimport {bar, foo} from './path';\nconst fooMock = foo as jest.Mock;  // best compromise?\n\n\njest.mock('../foo', () => {\n  const originalModule = jest.requireActual('../foo');\n\n  const barMock = jest.fn();  // not accessible outside\n  return {\n    __esModule: true,\n    ...originalModule,\n    bar: barMock,   // without 'import' statement, may still work?\n    default: jest.fn(() => 'mocked baz'),\n    foo: 'mocked foo',  // to mock foo only, no need for 'import'\n    \n    exportToMock: {\n        functionInExportToMock: ()=>({\n            fieldReturnedByFunction: jest.fn();\n        })\n    }\n    \n  };\n});\n\n\n// OR\n\nimport {bar, foo} from './path';\n// still needed, p3 try dynamic import\n// bar, foo need to be referenced   TODO big problem\n\nconst fooMock = jest.fn();\nmockModule({\n  modulePath: './path',\n  mockMap: {\n    foo: fooMock\n  },\n})\n\nfunction mockModule({\n  modulePath,\n  mockMap,\n}: {\n  /**\n   * e.g. './path' as in 'import x from \"./path\"'\n   */\n  modulePath: string;\n\n  /**\n   * mock mapping  e.g. {foo: fooMock}\n   */\n  mockMap: Record<string, unknown>;\n}) {\n  jest.mock(modulePath, () => {\n    const originalModule = jest.requireActual(modulePath);\n\n    return {\n      __esModule: true,\n      ...originalModule,\n      ...mockMap,\n    };\n  });\n}\n\n"})}),"\n",(0,o.jsx)(n.h3,{id:"ts-jest",children:"ts-jest"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n  ",(0,o.jsxs)(n.p,{style:{},children:["\nhttps://kulshekhar.github.io/ts-jest/docs/getting-started/installation/\nBy default, Jest can run without any config files, but it will not compile .ts files.\ncreate a configuration file that will tell Jest to use a ts-jest preset\n",(0,o.jsx)(n.ins,{children:" it may still not work with vscode-test-panel "}),"\n  "]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},71670:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>c});var o=t(27378);const s={},r=o.createContext(s);function c(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);