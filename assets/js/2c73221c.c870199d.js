"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8821],{12766:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var i=t(24246),s=t(71670);const o={},r=void 0,a={id:"my/public/software/architecture/auth-openID",title:"auth-openID",description:"ID token (authentication) meant for RP-application (not end-user)",source:"@site/docs/my/public/software/architecture/auth-openID.md",sourceDirName:"my/public/software/architecture",slug:"/my/public/software/architecture/auth-openID",permalink:"/note/docs/my/public/software/architecture/auth-openID",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"macOS",permalink:"/note/docs/my/public/software/apple/macOS"},next:{title:"auth",permalink:"/note/docs/my/public/software/architecture/auth"}},c={},l=[];function u(e){const n={blockquote:"blockquote",cite:"cite",li:"li",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(n.blockquote,{children:["\n  ",(0,i.jsx)(n.p,{style:{},children:"\nID token (authentication) meant for RP-application (not end-user)\n- RP verifies signature\n- RP verifies Infrastructural claims\n  - issuer  (IDP)\n  - audience (RP itself)\n  - expiration\n- OR  validate by sending it to (IDP) introspection endpoint (then get plain-text data back)\n"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Bearer tokens can be used directly without encryption, validation (at server side), etc."}),"\n",(0,i.jsx)(n.li,{children:"proof of possession (validation at server side) in OAuth2 or OpenID Connect is not mainstream at all (2023)"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"2 ways of requesting ID-token:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"a response_type parameter with the id_token value"}),"\n",(0,i.jsx)(n.li,{children:"a scope parameter with the openid value (in case of OAuth2-SDK only, no OIDC)"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"AccessToken RefreshToken used to access resource (i.e. authorization)."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"not for end-user to communicate with RP (i.e. client to Auth)"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The format used in an access token is a matter agreed upon by the\nresource server and the authorization server, and the details can\nchange at any time to their discretion without informing the client,\nso should be treated as opaque."}),"\n",(0,i.jsx)(n.p,{children:"core set of grants originally defined by OAuth2:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Authorization Code,"}),"\n",(0,i.jsx)(n.li,{children:"Implicit,"}),"\n",(0,i.jsx)(n.li,{children:"Resource Owner Credentials,"}),"\n",(0,i.jsxs)(n.li,{children:["Client Credentials\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'confidential client itself has identity, not "borrow" from a user, e.g. CI-server'}),"\n",(0,i.jsx)(n.li,{children:"client gets only accessToken"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Refresh Token.\nOpenID Connect introduces a new one: the Hybrid, which combines 2 particular OAuth2 grants into 1 single flow."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"authorization code grant"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"for authorization (for sign-in, use OIDC on top)"}),"\n",(0,i.jsx)(n.li,{children:"calls IDP API from RP web-server"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"scope = (usually) permission + resource (e.g. mail.read)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"openid scope  causes an ID token to be sent"}),"\n",(0,i.jsx)(n.li,{children:"profile scope, causes the ID token to include some claims (may also fetch it later using accessToken to Userinfo-endpoint)"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Userinfo-endpoint (hosted together with auth-server): a standardized way to get user info"}),"\n",(0,i.jsx)(n.p,{children:"The shorter the (access)token validity interval, the more up to date the\nissued information will be. Solutions typically seek compromises that\nbalance that with performance and traffic considerations."}),"\n",(0,i.jsx)(n.p,{children:"Ploughing through eighty-six pages of intensely technical language,\nsuch as the ones constituting the OpenID Connect Core specification,\nis a pretty big endeavor, even for committed professionals."}),"\n  ",(0,i.jsx)(n.p,{}),"\n  ",(0,i.jsx)(n.cite,{children:"\nhttps://auth0.com/resources/ebooks/oauth-openid-connect-professional-guide\nv02\n  "}),"\n"]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},71670:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>r});var i=t(27378);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);