"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4216],{36093:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var n=s(24246),i=s(71670);const a={},r=void 0,o={id:"my/public/software/JavaScript/data-check",title:"data-check",description:"runtime validation",source:"@site/docs/my/public/software/JavaScript/data-check.md",sourceDirName:"my/public/software/JavaScript",slug:"/my/public/software/JavaScript/data-check",permalink:"/note/docs/my/public/software/JavaScript/data-check",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"bundle",permalink:"/note/docs/my/public/software/JavaScript/bundle"},next:{title:"data-structure",permalink:"/note/docs/my/public/software/JavaScript/data-structure"}},c={},l=[{value:"runtime validation",id:"runtime-validation",level:3},{value:"zod",id:"zod",level:4},{value:"io-ts",id:"io-ts",level:4}];function d(e){const t={a:"a",blockquote:"blockquote",br:"br",cite:"cite",code:"code",h3:"h3",h4:"h4",ins:"ins",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"runtime-validation",children:"runtime validation"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://guides.rubyonrails.org/active_record_validations.html",children:"good summary of client, db, model"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://npmtrends.com/ajv-vs-express-validation-vs-io-ts-vs-joi-browser-vs-joi-to-json-schema-vs-joigoose-vs-validator",children:"https://npmtrends.com/ajv-vs-express-validation-vs-io-ts-vs-joi-browser-vs-joi-to-json-schema-vs-joigoose-vs-validator"}),"\najv seems the most popular"]}),"\n",(0,n.jsxs)(t.p,{children:["typescript (compile time) validate json (runtime)",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.a,{href:"https://ajv.js.org/guide/schema-language.html",children:"https://ajv.js.org/guide/schema-language.html"}),(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.a,{href:"https://json-schema.org/implementations.html",children:"https://json-schema.org/implementations.html"}),(0,n.jsx)(t.br,{}),"\nbest for its popularity"]}),"\n",(0,n.jsx)(t.p,{children:"ajv   write both (a bit duplicate) TS and schema"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["dead ",(0,n.jsx)(t.a,{href:"https://github.com/roziscoding/ts-transformer-ajv",children:"https://github.com/roziscoding/ts-transformer-ajv"})]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"TS class -> json-schema"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["best in opinion of ",(0,n.jsx)(t.a,{href:"https://www.rehanvdm.com/blog/typescript-type-safety-with-ajv-standalone",children:"https://www.rehanvdm.com/blog/typescript-type-safety-with-ajv-standalone"})]}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://github.com/YousefED/typescript-json-schema",children:"https://github.com/YousefED/typescript-json-schema"})}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"json-schema -> TS class"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"other languages may reuse json-schema"}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["reference:",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.a,{href:"https://simonplend.com/how-to-handle-request-validation-in-your-express-api/",children:"https://simonplend.com/how-to-handle-request-validation-in-your-express-api/"})]}),"\n",(0,n.jsx)(t.p,{children:"Prisma   schema.prisma -> TS class"}),"\n",(0,n.jsxs)(t.p,{children:["json data -> TS types",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.a,{href:"https://quicktype.io/typescript",children:"https://quicktype.io/typescript"}),(0,n.jsx)(t.br,{}),"\nrecommended by ",(0,n.jsx)(t.a,{href:"https://docs.aws.amazon.com/lambda/latest/dg/typescript-handler.html",children:"https://docs.aws.amazon.com/lambda/latest/dg/typescript-handler.html"})]}),"\n",(0,n.jsx)(t.h4,{id:"zod",children:"zod"}),"\n",(0,n.jsx)(t.p,{children:"TypeScript-first schema validation with static type inference\n(how well does it work in other lang? say golang)"}),"\n",(0,n.jsxs)(t.p,{children:["p3 check\n",(0,n.jsx)(t.a,{href:"https://github.com/StefanTerdell/zod-to-json-schema",children:"https://github.com/StefanTerdell/zod-to-json-schema"}),"\n",(0,n.jsx)(t.a,{href:"https://github.com/StefanTerdell/json-schema-to-zod",children:"https://github.com/StefanTerdell/json-schema-to-zod"})]}),"\n",(0,n.jsx)(t.p,{children:"vs. io-ts:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"2023 very similar functionality, much more readable documentation, more leaning towards OOP rather than FP"}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://zod.dev/?id=comparison",children:"https://zod.dev/?id=comparison"}),"\nZod was designed to mirror TypeScript as closely as possible. But\nthere are many so-called \"refinement types\" you may wish to check for\nthat can't be represented in TypeScript's type system. For instance:\nchecking that a number is an integer or that a string is a valid email\naddress."]}),"\n",(0,n.jsxs)(t.p,{children:["zod had a pretty rich ecosystem where it integrates pretty seamlessly\nwith some libraries  e.g. ",(0,n.jsx)(t.a,{href:"https://github.com/react-hook-form/resolvers#zod",children:"https://github.com/react-hook-form/resolvers#zod"})]}),"\n",(0,n.jsx)(t.h4,{id:"io-ts",children:"io-ts"}),"\n",(0,n.jsxs)(t.p,{children:["io-ts is very flexible, but also very opinionated towards functional\nprogramming, to the point of putting functional programming purity\nover a fluent developer experience. Its documentation is a bit sparse\nand lacks details. To use io-ts, you really cannot avoid using fp-ts\nand functional programming as well.\n",(0,n.jsx)(t.a,{href:"https://javascript.plainenglish.io/a-typescript-runtime-data-validators-comparison-eeedc6b0583a",children:"https://javascript.plainenglish.io/a-typescript-runtime-data-validators-comparison-eeedc6b0583a"})]}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.pre,{children:["The advantage of using io-ts to define the runtime type is that we can\nvalidate the type at runtime, and we can also extract the\ncorresponding static type, so we don\u2019t have to define it twice.\n\ncons:\nRecursive types can't be inferred by TypeScript so you must provide the static type as a hint\n",(0,n.jsx)(t.code,{children:"decodedPayload._tag === 'Left'"})," weird syntax to check validation-errors\n",(0,n.jsx)(t.ins,{children:"\nHave to make types for DynamoDB \n"}),"\n\n"]}),"\n",(0,n.jsx)(t.cite,{children:"\nhttps://github.com/gcanti/io-ts/blob/master/index.md\n"}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},71670:(e,t,s)=>{s.d(t,{Z:()=>o,a:()=>r});var n=s(27378);const i={},a=n.createContext(i);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);